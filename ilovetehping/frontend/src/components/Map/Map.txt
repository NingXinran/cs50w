import { Wrapper, Status } from "@googlemaps/react-wrapper"
import { useRef, useEffect, useState } from "react"
import { containerStyle, center, mapStyle, mapOptions, pinsData } from './consts.js'
import { createRoot } from "react-dom/client"
import axios from "axios"

export default function Map() {
    return (
    <Wrapper 
        apiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}
        render={render}
    />)
}

const render = (status) => {
    switch (status) {
        case Status.LOADING:
            return <Spinner />
        case Status.FAILURE:
            return <><h1>Error.</h1></>
        case Status.SUCCESS:
            return <MyMap />
    }
}

function MyMap() {
    const [map, setMap] = useState();
    const ref = useRef();  // mutable place to put data that does not trigger rerender, ie not watched

    useEffect(() => {
        setMap(new window.google.maps.Map(
            ref.current, 
            mapOptions
        ))
    }, []);

    return <>
        <div ref={ref} id="map"/>
        {map && <TehPins map={map}/>}
    </>
}

function Spinner() {
    return <>
        <h1>Loading...</h1>
    </>
}

function TehPins({map}) {
    const [pins, setPins] = useState(pinsData)  // set initial value

    return <>{
        pins.map( pin =>
            <Marker
                map = {map}
                position={{lat: pin.latitude, lng: pin.longitude}}
            >
                <div>
                    <h2>
                        pin.name
                    </h2>
                </div>
            </Marker>
        )
    }</>
}

function Marker() {
    new window.google.maps.map.AdvancedMarkerElement({
    })
}